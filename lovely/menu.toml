[manifest]
version = "0.0.8"
priority = 0
dump_lua = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
if G.SPLASH_LOGO then
    love.graphics.push()
    G.SPLASH_LOGO:translate_container()
    G.SPLASH_LOGO:draw()
    love.graphics.pop()
end
'''
position = "after"
payload = '''
if self.SPLASH_MULTIVERSE_LOGO then
    love.graphics.push()
    self.SPLASH_MULTIVERSE_LOGO:translate_container()
    if not G.SPLASH_MULTIVERSE_LOGO.states.drag.is then
        local scale_mod = 0.07 + 0.02*math.sin(1.8*G.TIMERS.REAL)
        local rotate_mod = 0.05*math.sin(1.219*G.TIMERS.REAL)
        G.SPLASH_MULTIVERSE_LOGO:draw_shader('dissolve',0, nil, nil, G.SPLASH_MULTIVERSE_LOGO,scale_mod, rotate_mod,nil, 0.1 + 0.03*math.sin(1.8*G.TIMERS.REAL),nil, 0.6)
        G.SPLASH_MULTIVERSE_LOGO:draw_shader('dissolve', nil, nil, nil, G.SPLASH_MULTIVERSE_LOGO, scale_mod, rotate_mod)
    end
    self.SPLASH_MULTIVERSE_LOGO.T.r = 0.08 * math.sin(G.TIMERS.REAL * 1.152)
    self.SPLASH_MULTIVERSE_LOGO.T.scale = 1 + 0.03 * math.sin(G.TIMERS.REAL * 1.06)
    add_to_drawhash(G.SPLASH_MULTIVERSE_LOGO)
    love.graphics.pop()
end
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
if self.SPLASH_LOGO then self.SPLASH_LOGO:remove(); self.SPLASH_LOGO = nil end
'''
position = "after"
payload = '''
if self.SPLASH_MULTIVERSE_LOGO then self.SPLASH_MULTIVERSE_LOGO:remove(); self.SPLASH_MULTIVERSE_LOGO = nil end
'''
match_indent = true
times = 1